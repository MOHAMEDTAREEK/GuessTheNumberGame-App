{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Colors from \"../constants/colors\";\nimport PrimaryButton from \"../components/ui/primarybutton\";\nimport Title from \"../components/ui/Title\";\nimport Card from \"../components/ui/card\";\nimport InstaText from \"../components/ui/InstaText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction StartGameScreen(_ref) {\n  var onpicknumber = _ref.onpicknumber;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredNumber = _useState2[0],\n      setEnteredNumber = _useState2[1];\n\n  function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  }\n\n  function resetInputHandler() {\n    setEnteredNumber('');\n  }\n\n  function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNumber);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid number!', 'Number has to be a number between 1 and 99.', [{\n        text: 'Okay',\n        style: 'destructive',\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    onpicknumber(chosenNumber);\n  }\n\n  return _jsxs(View, {\n    style: styles.rootcontainer,\n    children: [_jsx(Title, {\n      children: \" Guess My Number \"\n    }), _jsxs(Card, {\n      children: [_jsx(InstaText, {\n        children: \"Enter a Number\"\n      }), _jsx(TextInput, {\n        style: styles.numberInput,\n        onChangeText: numberInputHandler,\n        maxLength: 2,\n        keyboardType: \"number-pad\",\n        value: enteredNumber\n      }), _jsxs(View, {\n        style: styles.buttonscontainer,\n        children: [_jsx(View, {\n          style: styles.buttoncontaner,\n          children: _jsx(PrimaryButton, {\n            onPress: resetInputHandler,\n            children: \" reset \"\n          })\n        }), _jsx(View, {\n          style: styles.buttoncontaner,\n          children: _jsx(PrimaryButton, {\n            onPress: confirmInputHandler,\n            children: \" confirm \"\n          })\n        })]\n      })]\n    })]\n  });\n}\n\nexport default StartGameScreen;\nvar devicehight = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  rootcontainer: {\n    flex: 1,\n    marginTop: devicehight < 300 ? 30 : 50,\n    alignItems: 'center'\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.accent1,\n    borderBottomWidth: 1,\n    color: Colors.accent1,\n    marginVertical: 8,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  buttonscontainer: {\n    flexDirection: 'row'\n  },\n  buttoncontaner: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useState","Colors","PrimaryButton","Title","Card","InstaText","StartGameScreen","onpicknumber","enteredNumber","setEnteredNumber","numberInputHandler","enteredText","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","styles","rootcontainer","numberInput","buttonscontainer","buttoncontaner","devicehight","Dimensions","get","height","StyleSheet","create","flex","marginTop","alignItems","width","fontSize","borderBottomColor","accent1","borderBottomWidth","color","marginVertical","fontWeight","textAlign","flexDirection"],"sources":["C:/Users/MT/Downloads/starting-project/starting-project/screens/startgamescreen.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { TextInput, View , StyleSheet, Alert ,Dimensions} from'react-native';\r\nimport Colors from '../constants/colors';\r\nimport PrimaryButton from '../components/ui/primarybutton';\r\nimport Title from '../components/ui/Title';\r\nimport Card from '../components/ui/card';\r\nimport InstaText from '../components/ui/InstaText';\r\nfunction StartGameScreen({ onpicknumber })   { \r\n   const [enteredNumber, setEnteredNumber] =useState('')\r\n   function numberInputHandler(enteredText){\r\n    setEnteredNumber(enteredText)\r\n   }\r\n   function resetInputHandler(){\r\n    setEnteredNumber('');\r\n   }\r\n   function confirmInputHandler() {\r\n    const chosenNumber = parseInt(enteredNumber);\r\n\r\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\r\n      Alert.alert(\r\n        'Invalid number!',\r\n        'Number has to be a number between 1 and 99.',\r\n        [{ text: 'Okay', style: 'destructive', onPress: resetInputHandler }]\r\n      );\r\n      return;\r\n    }\r\n\r\n    onpicknumber(chosenNumber);\r\n  }\r\n\r\n   \r\n   return (\r\n    <View style={styles.rootcontainer}>\r\n        <Title> Guess My Number </Title>\r\n    <Card>\r\n        <InstaText>Enter a Number</InstaText>\r\n        <TextInput style={styles.numberInput} onChangeText={numberInputHandler} maxLength={2} keyboardType=\"number-pad\" value={enteredNumber}/>\r\n        <View style={styles.buttonscontainer}>\r\n            <View style={styles.buttoncontaner}>\r\n                <PrimaryButton onPress={resetInputHandler}> reset </PrimaryButton>\r\n            </View>\r\n            <View style={styles.buttoncontaner}>\r\n                <PrimaryButton onPress={confirmInputHandler} > confirm </PrimaryButton>\r\n             </View>\r\n        </View>\r\n    </Card>\r\n    </View>\r\n    );\r\n}\r\n\r\nexport default StartGameScreen; \r\n\r\nconst devicehight =Dimensions.get('window').height; \r\nconst styles = StyleSheet.create({\r\n    rootcontainer :{\r\n        flex:1,\r\n        marginTop: devicehight < 300 ? 30 : 50 ,\r\n        alignItems:'center'\r\n    },\r\n    \r\nnumberInput :{\r\n    height: 50,\r\n    width:50,\r\n    fontSize:32,\r\n    borderBottomColor:Colors.accent1,\r\n    borderBottomWidth:1,\r\n    color:Colors.accent1,\r\n    marginVertical:8,\r\n    fontWeight: 'bold',\r\n    textAlign:'center',\r\n},\r\nbuttonscontainer:{\r\n    flexDirection:'row',\r\n}, \r\nbuttoncontaner:{\r\n    flex:1,\r\n}\r\n}\r\n)"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,aAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,SAAP;;;;AACA,SAASC,eAAT,OAA6C;EAAA,IAAlBC,YAAkB,QAAlBA,YAAkB;;EAC1C,gBAAyCP,QAAQ,CAAC,EAAD,CAAjD;EAAA;EAAA,IAAOQ,aAAP;EAAA,IAAsBC,gBAAtB;;EACA,SAASC,kBAAT,CAA4BC,WAA5B,EAAwC;IACvCF,gBAAgB,CAACE,WAAD,CAAhB;EACA;;EACD,SAASC,iBAAT,GAA4B;IAC3BH,gBAAgB,CAAC,EAAD,CAAhB;EACA;;EACD,SAASI,mBAAT,GAA+B;IAC9B,IAAMC,YAAY,GAAGC,QAAQ,CAACP,aAAD,CAA7B;;IAEA,IAAIQ,KAAK,CAACF,YAAD,CAAL,IAAuBA,YAAY,IAAI,CAAvC,IAA4CA,YAAY,GAAG,EAA/D,EAAmE;MACjEG,KAAK,CAACC,KAAN,CACE,iBADF,EAEE,6CAFF,EAGE,CAAC;QAAEC,IAAI,EAAE,MAAR;QAAgBC,KAAK,EAAE,aAAvB;QAAsCC,OAAO,EAAET;MAA/C,CAAD,CAHF;MAKA;IACD;;IAEDL,YAAY,CAACO,YAAD,CAAZ;EACD;;EAGA,OACC,MAAC,IAAD;IAAM,KAAK,EAAEQ,MAAM,CAACC,aAApB;IAAA,WACI,KAAC,KAAD;MAAA;IAAA,EADJ,EAEA,MAAC,IAAD;MAAA,WACI,KAAC,SAAD;QAAA;MAAA,EADJ,EAEI,KAAC,SAAD;QAAW,KAAK,EAAED,MAAM,CAACE,WAAzB;QAAsC,YAAY,EAAEd,kBAApD;QAAwE,SAAS,EAAE,CAAnF;QAAsF,YAAY,EAAC,YAAnG;QAAgH,KAAK,EAAEF;MAAvH,EAFJ,EAGI,MAAC,IAAD;QAAM,KAAK,EAAEc,MAAM,CAACG,gBAApB;QAAA,WACI,KAAC,IAAD;UAAM,KAAK,EAAEH,MAAM,CAACI,cAApB;UAAA,UACI,KAAC,aAAD;YAAe,OAAO,EAAEd,iBAAxB;YAAA;UAAA;QADJ,EADJ,EAII,KAAC,IAAD;UAAM,KAAK,EAAEU,MAAM,CAACI,cAApB;UAAA,UACI,KAAC,aAAD;YAAe,OAAO,EAAEb,mBAAxB;YAAA;UAAA;QADJ,EAJJ;MAAA,EAHJ;IAAA,EAFA;EAAA,EADD;AAiBF;;AAED,eAAeP,eAAf;AAEA,IAAMqB,WAAW,GAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAA5C;AACA,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;EAC7BT,aAAa,EAAE;IACXU,IAAI,EAAC,CADM;IAEXC,SAAS,EAAEP,WAAW,GAAG,GAAd,GAAoB,EAApB,GAAyB,EAFzB;IAGXQ,UAAU,EAAC;EAHA,CADc;EAOjCX,WAAW,EAAE;IACTM,MAAM,EAAE,EADC;IAETM,KAAK,EAAC,EAFG;IAGTC,QAAQ,EAAC,EAHA;IAITC,iBAAiB,EAACrC,MAAM,CAACsC,OAJhB;IAKTC,iBAAiB,EAAC,CALT;IAMTC,KAAK,EAACxC,MAAM,CAACsC,OANJ;IAOTG,cAAc,EAAC,CAPN;IAQTC,UAAU,EAAE,MARH;IASTC,SAAS,EAAC;EATD,CAPoB;EAkBjCnB,gBAAgB,EAAC;IACboB,aAAa,EAAC;EADD,CAlBgB;EAqBjCnB,cAAc,EAAC;IACXO,IAAI,EAAC;EADM;AArBkB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}