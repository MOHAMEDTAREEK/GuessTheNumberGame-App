{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Title from \"../components/ui/Title\";\nimport PrimaryButton from \"../components/ui/primarybutton\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport { useState, useEffect } from 'react';\nimport Card from \"../components/ui/card\";\nimport { Ionicons } from '@expo/vector-icons';\nimport InstaText from \"../components/ui/InstaText\";\nimport GuessLogItem from \"../components/game/GuessLogItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nvar minBoundary = 1;\nvar maxBoundary = 100;\n\nfunction Gamescreen(_ref) {\n  var userNumber = _ref.userNumber,\n      onGameOver = _ref.onGameOver;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n\n  var _useState = useState(initialGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  var _useState3 = useState([initialGuess]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      guessRounds = _useState4[0],\n      setGuessRounds = _useState4[1];\n\n  useEffect(function () {\n    if (currentGuess === userNumber) {\n      onGameOver(guessRounds.length);\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n  useEffect(function () {\n    minBoundary = 1;\n    maxBoundary = 100;\n  }, []);\n\n  function nextGuessHandler(direction) {\n    if (direction === 'lower' && currentGuess < userNumber || direction === 'greater' && currentGuess > userNumber) {\n      Alert.alert(\"Don't lie!\", 'You know that this is wrong...', [{\n        text: 'Sorry!',\n        style: 'cancel'\n      }]);\n      return;\n    }\n\n    if (direction === 'lower') {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n\n    var newRndNumber = generateRandomBetween(minBoundary, maxBoundary, currentGuess);\n    setCurrentGuess(newRndNumber);\n    setGuessRounds(function (prevGuessRounds) {\n      return [newRndNumber].concat(_toConsumableArray(prevGuessRounds));\n    });\n  }\n\n  var guessRoundsListLength = guessRounds.length;\n  return _jsxs(View, {\n    style: styles.Screen,\n    children: [_jsx(Title, {\n      children: \" Opponent's Guess\"\n    }), _jsxs(NumberContainer, {\n      children: [\" \", currentGuess]\n    }), _jsxs(Card, {\n      children: [_jsx(InstaText, {\n        style: styles.instatext,\n        children: \" higher or lower?\"\n      }), _jsxs(View, {\n        style: styles.buttonscontainer,\n        children: [_jsx(View, {\n          style: styles.buttoncontaner,\n          children: _jsxs(PrimaryButton, {\n            onPress: nextGuessHandler.bind(this, 'lower'),\n            children: [\" \", _jsx(Ionicons, {\n              name: \"md-remove\",\n              size: 24\n            }), \" \"]\n          })\n        }), _jsx(View, {\n          style: styles.buttoncontaner,\n          children: _jsxs(PrimaryButton, {\n            onPress: nextGuessHandler.bind(this, 'greater'),\n            children: [\"  \", _jsx(Ionicons, {\n              name: \"md-add\",\n              size: 24\n            }), \" \"]\n          })\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.listcontainer,\n      children: _jsx(FlatList, {\n        data: guessRounds,\n        renderItem: function renderItem(itemData) {\n          return _jsx(GuessLogItem, {\n            roundNumber: guessRoundsListLength - itemData.index,\n            guess: itemData.item\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        }\n      })\n    })]\n  });\n}\n\nexport default Gamescreen;\nvar styles = StyleSheet.create({\n  Screen: {\n    flex: 1,\n    padding: 24,\n    alignItems: 'center'\n  },\n  buttonscontainer: {\n    flexDirection: 'row'\n  },\n  buttoncontaner: {\n    flex: 1\n  },\n  instatext: {\n    marginBottom: 12\n  },\n  listcontainer: {\n    flex: 1,\n    padding: 16\n  }\n});","map":{"version":3,"names":["Title","PrimaryButton","NumberContainer","useState","useEffect","Card","Ionicons","InstaText","GuessLogItem","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","minBoundary","maxBoundary","Gamescreen","userNumber","onGameOver","initialGuess","currentGuess","setCurrentGuess","guessRounds","setGuessRounds","length","nextGuessHandler","direction","Alert","alert","text","style","newRndNumber","prevGuessRounds","guessRoundsListLength","styles","Screen","instatext","buttonscontainer","buttoncontaner","bind","listcontainer","itemData","index","item","StyleSheet","create","flex","padding","alignItems","flexDirection","marginBottom"],"sources":["C:/Users/MT/Downloads/starting-project/starting-project/screens/gamescreen.js"],"sourcesContent":["import { View , Text , StyleSheet , Alert,FlatList} from 'react-native';\r\nimport Title from '../components/ui/Title';\r\nimport PrimaryButton from '../components/ui/primarybutton';\r\nimport NumberContainer from '../components/game/NumberContainer';\r\nimport {useState, useEffect} from 'react'\r\nimport Card from '../components/ui/card';\r\nimport { Ionicons } from '@expo/vector-icons'\r\nimport InstaText from '../components/ui/InstaText';\r\nimport GuessLogItem from '../components/game/GuessLogItem';\r\nfunction generateRandomBetween(min, max, exclude) {\r\n    const rndNum = Math.floor(Math.random() * (max - min)) + min;\r\n  \r\n    if (rndNum === exclude) {\r\n      return generateRandomBetween(min, max, exclude);\r\n    } else {\r\n      return rndNum;\r\n    }\r\n  }\r\n  let minBoundary = 1;\r\n  let maxBoundary = 100;\r\nfunction Gamescreen({userNumber, onGameOver}) {\r\n    const initialGuess = generateRandomBetween(1, 100 ,userNumber );\r\n    const [currentGuess , setCurrentGuess] =useState(initialGuess);\r\n    const [guessRounds, setGuessRounds]=useState([initialGuess]);\r\n\r\n    useEffect(() => {\r\n        if (currentGuess === userNumber){\r\n            onGameOver(guessRounds.length);\r\n        }\r\n    },[currentGuess, userNumber, onGameOver]);\r\nuseEffect (() => {\r\n  minBoundary=1;\r\n  maxBoundary=100;\r\n},[])\r\n\r\n    function nextGuessHandler(direction){\r\n        if (\r\n            (direction === 'lower' && currentGuess < userNumber) ||\r\n            (direction === 'greater' && currentGuess > userNumber)\r\n          ) {\r\n            Alert.alert(\"Don't lie!\", 'You know that this is wrong...', [\r\n              { text: 'Sorry!', style: 'cancel' },\r\n            ]);\r\n            return;\r\n          }\r\n      \r\n          if (direction === 'lower') {\r\n            maxBoundary = currentGuess;\r\n          } else {\r\n            minBoundary = currentGuess + 1;\r\n          }\r\n      \r\n          const newRndNumber = generateRandomBetween(\r\n            minBoundary,\r\n            maxBoundary,\r\n            currentGuess\r\n          );\r\n        setCurrentGuess(newRndNumber);\r\n        setGuessRounds( prevGuessRounds => [newRndNumber, ...prevGuessRounds] );\r\n    }\r\n    const guessRoundsListLength = guessRounds.length;\r\n\r\n    return (\r\n    <View style={styles.Screen}>\r\n        <Title> Opponent's Guess</Title>\r\n    <NumberContainer> { currentGuess }</NumberContainer>\r\n    <Card>\r\n        <InstaText style={styles.instatext}> higher or lower?</InstaText>\r\n        <View style={styles.buttonscontainer}>\r\n            <View style={styles.buttoncontaner}>\r\n        <PrimaryButton onPress={nextGuessHandler.bind(this,'lower')}> <Ionicons name=\"md-remove\" size={24}/> </PrimaryButton>\r\n        </View>\r\n        <View  style={styles.buttoncontaner}>\r\n        <PrimaryButton onPress={nextGuessHandler.bind(this,'greater')}>  <Ionicons name=\"md-add\" size={24}/> </PrimaryButton>\r\n        </View>\r\n        </View>\r\n    </Card>\r\n    <View style={styles.listcontainer}>\r\n    <FlatList\r\n          data={guessRounds}\r\n          renderItem={(itemData) => (\r\n            <GuessLogItem\r\n              roundNumber={guessRoundsListLength - itemData.index}\r\n              guess={itemData.item}\r\n            />\r\n          )}\r\n          keyExtractor={(item) => item}\r\n        />\r\n    </View>\r\n    </View>\r\n    );\r\n}\r\n\r\n export default Gamescreen;\r\n  \r\n const styles=StyleSheet.create({\r\n    Screen :{\r\n        flex:1,\r\n        padding:24,\r\n        alignItems:'center',\r\n    },\r\n    buttonscontainer:{\r\n        flexDirection:'row',\r\n    }, \r\n    buttoncontaner:{\r\n        flex:1,\r\n    },\r\n    instatext : {\r\n        marginBottom:12,\r\n    },\r\n    listcontainer :{\r\n      flex:1,\r\n      padding:16,\r\n\r\n    }\r\n });"],"mappings":"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"},"metadata":{},"sourceType":"module"}