{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport StartGameScreen from \"./screens/startgamescreen\";\nimport Gamescreen from \"./screens/gamescreen\";\nimport Colors from \"./constants/colors\";\nimport GameOverScreen from \"./screens/gameoverscreen\";\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      userNumber = _useState2[0],\n      setUserNumber = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gameIsOver = _useState4[0],\n      setGameIsOver = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      guessRounds = _useState6[0],\n      setGuessRounds = _useState6[1];\n\n  var _useFonts = useFonts({\n    'open-sans': require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    'open-sans-bold': require(\"./assets/fonts/OpenSans-Bold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsloaded = _useFonts2[0];\n\n  if (!fontsloaded) {\n    return _jsx(AppLoading, {});\n  }\n\n  function pickednumberhandler(pickednumber) {\n    setUserNumber(pickednumber);\n    setGameIsOver(false);\n  }\n\n  function gameOverHandler(numberOfRounds) {\n    setGameIsOver(true);\n    setGuessRounds(numberOfRounds);\n  }\n\n  function startNewGameHandeler() {\n    setUserNumber(null);\n    setGuessRounds(0);\n  }\n\n  var screen = _jsx(StartGameScreen, {\n    onpicknumber: pickednumberhandler\n  });\n\n  if (userNumber) {\n    screen = _jsx(Gamescreen, {\n      userNumber: userNumber,\n      onGameOver: gameOverHandler\n    });\n  }\n\n  if (gameIsOver && userNumber) {\n    screen = _jsx(GameOverScreen, {\n      userNumber: userNumber,\n      roundsNumber: guessRounds,\n      onStartGame: startNewGameHandeler\n    });\n  }\n\n  return _jsx(LinearGradient, {\n    colors: [Colors.primary4, Colors.accent1],\n    style: styles.rootscreen,\n    children: _jsx(SafeAreaView, {\n      style: styles.rootscreen,\n      children: screen\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  rootscreen: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useState","LinearGradient","StartGameScreen","Gamescreen","Colors","GameOverScreen","useFonts","AppLoading","App","userNumber","setUserNumber","gameIsOver","setGameIsOver","guessRounds","setGuessRounds","require","fontsloaded","pickednumberhandler","pickednumber","gameOverHandler","numberOfRounds","startNewGameHandeler","screen","primary4","accent1","styles","rootscreen","StyleSheet","create","flex"],"sources":["C:/Users/MT/Downloads/starting-project/starting-project/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { StyleSheet ,ImageBackground , SafeAreaView } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport StartGameScreen from './screens/startgamescreen';\nimport Gamescreen from './screens/gamescreen';\nimport Colors from './constants/colors';\nimport GameOverScreen from './screens/gameoverscreen';\nimport { useFonts } from 'expo-font'\nimport AppLoading from 'expo-app-loading';\nexport default function App() {\n  const [userNumber, setUserNumber] = useState();\n  const [gameIsOver, setGameIsOver] = useState(true);\n  const [guessRounds, setGuessRounds]=useState(0);\n  \n  const [fontsloaded] =useFonts({\n    'open-sans': require('./assets/fonts/OpenSans-Regular.ttf'),\n    'open-sans-bold': require('./assets/fonts/OpenSans-Bold.ttf'),\n  });\n  if (!fontsloaded){\n    return <AppLoading />;\n  }\n  function pickednumberhandler(pickednumber){ \n    setUserNumber(pickednumber);\n    setGameIsOver(false);\n\n  }\n\n  function gameOverHandler (numberOfRounds){\n    setGameIsOver(true);\n    setGuessRounds(numberOfRounds);\n  }\n  function startNewGameHandeler() {\n    setUserNumber(null);\n    setGuessRounds(0);\n  }\n\n  let screen=    <StartGameScreen  onpicknumber ={pickednumberhandler}/>\n  if (userNumber){\n    screen=<Gamescreen userNumber={userNumber} onGameOver={gameOverHandler} />\n  }\n  if(gameIsOver && userNumber){\n    screen= <GameOverScreen userNumber={userNumber} roundsNumber={guessRounds} onStartGame={startNewGameHandeler} />\n  }\n  \n\n  return (\n    <LinearGradient colors={[Colors.primary4,Colors.accent1]}style={styles.rootscreen}>\n    <SafeAreaView style={styles.rootscreen}>{screen}</SafeAreaView>\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\nrootscreen: {\n  flex:1,\n}\n\n});\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;AACA,OAAOC,cAAP;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AACA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAAoCR,QAAQ,EAA5C;EAAA;EAAA,IAAOS,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAoCV,QAAQ,CAAC,IAAD,CAA5C;EAAA;EAAA,IAAOW,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAoCZ,QAAQ,CAAC,CAAD,CAA5C;EAAA;EAAA,IAAOa,WAAP;EAAA,IAAoBC,cAApB;;EAEA,gBAAqBR,QAAQ,CAAC;IAC5B,aAAaS,OAAO,uCADQ;IAE5B,kBAAkBA,OAAO;EAFG,CAAD,CAA7B;EAAA;EAAA,IAAOC,WAAP;;EAIA,IAAI,CAACA,WAAL,EAAiB;IACf,OAAO,KAAC,UAAD,KAAP;EACD;;EACD,SAASC,mBAAT,CAA6BC,YAA7B,EAA0C;IACxCR,aAAa,CAACQ,YAAD,CAAb;IACAN,aAAa,CAAC,KAAD,CAAb;EAED;;EAED,SAASO,eAAT,CAA0BC,cAA1B,EAAyC;IACvCR,aAAa,CAAC,IAAD,CAAb;IACAE,cAAc,CAACM,cAAD,CAAd;EACD;;EACD,SAASC,oBAAT,GAAgC;IAC9BX,aAAa,CAAC,IAAD,CAAb;IACAI,cAAc,CAAC,CAAD,CAAd;EACD;;EAED,IAAIQ,MAAM,GAAK,KAAC,eAAD;IAAkB,YAAY,EAAGL;EAAjC,EAAf;;EACA,IAAIR,UAAJ,EAAe;IACba,MAAM,GAAC,KAAC,UAAD;MAAY,UAAU,EAAEb,UAAxB;MAAoC,UAAU,EAAEU;IAAhD,EAAP;EACD;;EACD,IAAGR,UAAU,IAAIF,UAAjB,EAA4B;IAC1Ba,MAAM,GAAE,KAAC,cAAD;MAAgB,UAAU,EAAEb,UAA5B;MAAwC,YAAY,EAAEI,WAAtD;MAAmE,WAAW,EAAEQ;IAAhF,EAAR;EACD;;EAGD,OACE,KAAC,cAAD;IAAgB,MAAM,EAAE,CAACjB,MAAM,CAACmB,QAAR,EAAiBnB,MAAM,CAACoB,OAAxB,CAAxB;IAAyD,KAAK,EAAEC,MAAM,CAACC,UAAvE;IAAA,UACA,KAAC,YAAD;MAAc,KAAK,EAAED,MAAM,CAACC,UAA5B;MAAA,UAAyCJ;IAAzC;EADA,EADF;AAKD;AAED,IAAMG,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EACjCF,UAAU,EAAE;IACVG,IAAI,EAAC;EADK;AADqB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}